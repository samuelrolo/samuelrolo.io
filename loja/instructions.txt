Instruções para a Loja de E-books:

Olá Samuel,

A secção da loja para o seu e-book "GESTÃO DA MUDANÇA" foi desenvolvida e integrada no seu website e backend existentes.

**Componentes Entregues:**

1.  **Frontend (dentro de `samuelrolo.io` no ficheiro zip):**
    *   Nova pasta `/loja` contendo:
        *   `index.html`: Página principal da loja, listando o e-book.
        *   `gestao-da-mudanca/index.html`: Página de detalhe do e-book "GESTÃO DA MUDANÇA" com formulário de compra.
        *   `css/loja-styles.css`: Estilos para a loja.
        *   `js/loja-scripts.js`: Scripts do frontend para interagir com o backend.
    *   O e-book em PDF (`Samuel Rolo - Gestão da Mudança - maio 2025.pdf`) está referenciado no backend para ser enviado como anexo. Durante o desenvolvimento, ele foi colocado em `/home/ubuntu/upload/`. Deverá garantir que a constante `EBOOK_FILE_PATH` no ficheiro `share2inspire_Backend/src/routes/payment.py` aponta para a localização correta do PDF no seu servidor de produção.

2.  **Backend (dentro de `share2inspire_Backend` no ficheiro zip):**
    *   `src/routes/payment.py`: Modificado para incluir:
        *   Endpoint `/api/payment/initiate-ebook-payment`: Para o frontend solicitar a criação de um link de pagamento ifthenpay (Pay By Link).
        *   Lógica no endpoint `/api/payment/callback`: Para processar o callback da ifthenpay e, em caso de pagamento bem-sucedido, acionar o envio do e-book.
    *   `src/utils/email_service.py`: Novo módulo para gerir o envio de e-mails via Brevo, incluindo o e-book como anexo.
    *   `requirements.txt`: Já incluía `sib-api-v3-sdk` e outras dependências necessárias.

**Configuração Necessária no Ambiente de Produção:**

Para que a loja funcione completamente em produção, precisa de configurar as seguintes variáveis de ambiente no seu servidor de backend (por exemplo, num ficheiro `.env` na raiz do projeto `share2inspire_Backend`):

1.  `IFTHENPAY_GATEWAY_KEY="SUA_CHAVE_BACKOFFICE_AQUI"` (A sua "Chave Backoffice" `3532-9893-7426-5310` que confirmou ser a GATEWAY_KEY para a API Pay By Link. O código já a usa como fallback, mas é melhor defini-la explicitamente.)
2.  `IFTHENPAY_CALLBACK_KEY="SUA_CHAVE_ANTI_PHISHING_IFTHENPAY_AQUI"` (A sua chave anti-phishing fornecida pela ifthenpay para validar os callbacks. Esta é crucial para a segurança.)
3.  `BREVO_API_KEY="SUA_CHAVE_API_BREVO_AQUI"` (A sua chave de API da Brevo para permitir o envio de e-mails.)
4.  `BREVO_SENDER_EMAIL="seu_email_remetente@seudominio.com"` (O endereço de e-mail remetente configurado e verificado na sua conta Brevo.)
5.  `BREVO_SENDER_NAME="Nome do Remetente"` (O nome do remetente que aparecerá nos e-mails, por exemplo, "Samuel Rolo Loja".)
6.  `FLASK_SECRET_KEY="UMA_CHAVE_SECRETA_FORTE_AQUI"` (Uma chave secreta forte para o Flask.)
7.  (Opcional) `FLASK_RUN_HOST=0.0.0.0`, `FLASK_RUN_PORT=5000`, `FLASK_DEBUG=False` (para produção, defina `FLASK_DEBUG` como `False`).

**Verificação Adicional com Ifthenpay:**

Durante os testes no ambiente de desenvolvimento, o endpoint `/api/payment/initiate-ebook-payment` comunicou com a ifthenpay, mas a API não retornou os dados esperados (`PinCode`, `RedirectUrl`) para o Pay By Link. Isto pode indicar que:
*   A "Chave Backoffice" (`3532-9893-7426-5310`), embora confirmada como GATEWAY_KEY, pode não estar habilitada para o serviço "Pay By Link" ou pode haver alguma restrição na sua conta ifthenpay.
*   Pode ser necessário contactar o suporte da ifthenpay para garantir que a sua conta e a chave estão corretamente configuradas e ativas para usar a API Pay By Link.

**Como Executar o Backend (Exemplo):**

No diretório `share2inspire_Backend`:
1.  Crie e ative um ambiente virtual:
    `python3 -m venv venv`
    `source venv/bin/activate` (Linux/Mac) ou `venv\Scripts\activate` (Windows)
2.  Instale as dependências:
    `pip install -r requirements.txt`
3.  Crie um ficheiro `.env` na raiz do projeto `share2inspire_Backend` e defina as variáveis de ambiente mencionadas acima.
4.  Execute o servidor Flask:
    `python src/main.py`

**Frontend:**

Os ficheiros da loja no frontend (`samuelrolo.io/loja/`) estão preparados para comunicar com o backend. O JavaScript em `loja/js/loja-scripts.js` tenta construir o URL do backend dinamicamente. Se o seu backend em produção estiver num domínio diferente do frontend, poderá precisar de ajustar a forma como o URL do endpoint `/api/payment/initiate-ebook-payment` é construído no ficheiro `loja-scripts.js`.

**Próximos Passos Recomendados:**

1.  Configure as variáveis de ambiente no seu servidor de produção.
2.  Verifique com a ifthenpay a ativação e configuração da sua `GATEWAY_KEY` para o serviço Pay By Link.
3.  Teste exaustivamente o fluxo de compra num ambiente de produção ou staging com as chaves reais.
4.  Ajuste o caminho `EBOOK_FILE_PATH` em `share2inspire_Backend/src/routes/payment.py` para o local correto do PDF no seu servidor.

Estou à disposição para quaisquer esclarecimentos.
